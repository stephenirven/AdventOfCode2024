defmodule December15Test do
  use ExUnit.Case
  doctest December15
  import December15

  @cases """
  ##########
  #..O..O.O#
  #......O.#
  #.OO..O.O#
  #..O@..O.#
  #O#..O...#
  #O..O..O.#
  #.OO.O.OO#
  #....O...#
  ##########

  <vv>^<v^>v>^vv^v>v<>v^v<v<^vv<<<^><<><>>v<vvv<>^v^>^<<<><<v<<<v^vv^v>^
  vvv<<^>^v^^><<>>><>^<<><^vv^^<>vvv<>><^^v>^>vv<>v<<<<v<^v>^<^^>>>^<v<v
  ><>vv>v^v^<>><>>>><^^>vv>v<^^^>>v^v^<^^>v^^>v^<^v>v<>>v^v^<v>v^^<^^vv<
  <<v<^>>^^^^>>>v^<>vvv^><v<<<>^^^vv^<vvv>^>v<^^^^v<>^>vvvv><>>v^<<^^^^^
  ^><^><>>><>^^<<^^v>>><^<v>^<vv>>v>>>^v><>^v><<<<v>>v<v<v>vvv>^<><<>^><
  ^>><>^v<><^vvv<^^<><v<<<<<><^v<<<><<<^^<v<^^^><^>>^<v^><<<^>>^v<v^v<v^
  >^>>^v>vv>^<<^v<>><<><<v<<v><>v<^vv<<<>^^v^>^^>>><<^v>>v^v><^^>>^<>vv^
  <><^^>^^^<><vvvvv^v<v<<>^v<v>v<<^><<><<><<<^^<<<^<<>><<><^^^>^^<>^>v<>
  ^^>vv<^v^v<vv>^<><v<^v>^^^>>>^^vvv^>vvv<>>>^<^>>>>>^<<^v>^vvv<>^<><<v>
  v^^>>><<^^<>>^v^<v^vv<>v^<<>^<^v^v><^<<<><<^<v><v<>vv>>v><v^<vv<>v^<<^
  """

  @cases2 """
  #######
  #...#.#
  #.....#
  #..OO@#
  #..O..#
  #.....#
  #######

  <vv<<^^<<^^
  """

  test "map and moves work expected" do
    {map, robot, moves} =
      @cases
      |> get_problem()

    {_res, robot, map} =
      Enum.reduce(moves, {:ok, robot, map}, fn move, {_res, robot, map} ->
        move_object(map, robot, move)
      end)

    assert robot == {4, 3}

    assert map == %{
             0 => %{
               0 => "#",
               1 => "#",
               2 => "#",
               3 => "#",
               4 => "#",
               5 => "#",
               6 => "#",
               7 => "#",
               8 => "#",
               9 => "#"
             },
             1 => %{
               0 => "#",
               1 => ".",
               2 => "O",
               3 => ".",
               4 => "O",
               5 => ".",
               6 => "O",
               7 => "O",
               8 => "O",
               9 => "#"
             },
             2 => %{
               0 => "#",
               1 => ".",
               2 => ".",
               3 => ".",
               4 => ".",
               5 => ".",
               6 => ".",
               7 => ".",
               8 => ".",
               9 => "#"
             },
             3 => %{
               0 => "#",
               1 => "O",
               2 => "O",
               3 => ".",
               4 => ".",
               5 => ".",
               6 => ".",
               7 => ".",
               8 => ".",
               9 => "#"
             },
             4 => %{
               0 => "#",
               1 => "O",
               2 => "O",
               3 => "@",
               4 => ".",
               5 => ".",
               6 => ".",
               7 => ".",
               8 => ".",
               9 => "#"
             },
             5 => %{
               0 => "#",
               1 => "O",
               2 => "#",
               3 => ".",
               4 => ".",
               5 => ".",
               6 => ".",
               7 => ".",
               8 => "O",
               9 => "#"
             },
             6 => %{
               0 => "#",
               1 => "O",
               2 => ".",
               3 => ".",
               4 => ".",
               5 => ".",
               6 => ".",
               7 => "O",
               8 => "O",
               9 => "#"
             },
             7 => %{
               0 => "#",
               1 => "O",
               2 => ".",
               3 => ".",
               4 => ".",
               5 => ".",
               6 => ".",
               7 => "O",
               8 => "O",
               9 => "#"
             },
             8 => %{
               0 => "#",
               1 => "O",
               2 => "O",
               3 => ".",
               4 => ".",
               5 => ".",
               6 => ".",
               7 => "O",
               8 => "O",
               9 => "#"
             },
             9 => %{
               0 => "#",
               1 => "#",
               2 => "#",
               3 => "#",
               4 => "#",
               5 => "#",
               6 => "#",
               7 => "#",
               8 => "#",
               9 => "#"
             }
           }

    assert get_coordinates(map) == 10092
  end

  test "doubled map" do
    {map, robot, moves} =
      @cases2
      |> get_problem(true)

    {_res, _robot, map} =
      Enum.reduce(moves, {:ok, robot, map}, fn move, {_res, robot, map} ->
        move_object(map, robot, move)
      end)

    visualise_map(map)

    assert map == %{
             0 => %{
               0 => "#",
               1 => "#",
               2 => "#",
               3 => "#",
               4 => "#",
               5 => "#",
               6 => "#",
               7 => "#",
               8 => "#",
               9 => "#",
               10 => "#",
               11 => "#",
               12 => "#",
               13 => "#"
             },
             1 => %{
               0 => "#",
               1 => "#",
               2 => ".",
               3 => ".",
               4 => ".",
               5 => "[",
               6 => "]",
               7 => ".",
               8 => "#",
               9 => "#",
               10 => ".",
               11 => ".",
               12 => "#",
               13 => "#"
             },
             2 => %{
               0 => "#",
               1 => "#",
               2 => ".",
               3 => ".",
               4 => ".",
               5 => "@",
               6 => ".",
               7 => "[",
               8 => "]",
               9 => ".",
               10 => ".",
               11 => ".",
               12 => "#",
               13 => "#"
             },
             3 => %{
               0 => "#",
               1 => "#",
               2 => ".",
               3 => ".",
               4 => ".",
               5 => ".",
               6 => "[",
               7 => "]",
               8 => ".",
               9 => ".",
               10 => ".",
               11 => ".",
               12 => "#",
               13 => "#"
             },
             4 => %{
               0 => "#",
               1 => "#",
               2 => ".",
               3 => ".",
               4 => ".",
               5 => ".",
               6 => ".",
               7 => ".",
               8 => ".",
               9 => ".",
               10 => ".",
               11 => ".",
               12 => "#",
               13 => "#"
             },
             5 => %{
               0 => "#",
               1 => "#",
               2 => ".",
               3 => ".",
               4 => ".",
               5 => ".",
               6 => ".",
               7 => ".",
               8 => ".",
               9 => ".",
               10 => ".",
               11 => ".",
               12 => "#",
               13 => "#"
             },
             6 => %{
               0 => "#",
               1 => "#",
               2 => "#",
               3 => "#",
               4 => "#",
               5 => "#",
               6 => "#",
               7 => "#",
               8 => "#",
               9 => "#",
               10 => "#",
               11 => "#",
               12 => "#",
               13 => "#"
             }
           }
  end

  test "doubled map 2" do
    {map, robot, moves} =
      @cases
      |> get_problem(true)

    {_res, _robot, map} =
      Enum.reduce(moves, {:ok, robot, map}, fn move, {_res, robot, map} ->
        move_object(map, robot, move)
      end)

    assert map == %{
             0 => %{
               0 => "#",
               1 => "#",
               2 => "#",
               3 => "#",
               4 => "#",
               5 => "#",
               6 => "#",
               7 => "#",
               8 => "#",
               9 => "#",
               10 => "#",
               11 => "#",
               12 => "#",
               13 => "#",
               14 => "#",
               15 => "#",
               16 => "#",
               17 => "#",
               18 => "#",
               19 => "#"
             },
             1 => %{
               0 => "#",
               1 => "#",
               2 => "[",
               3 => "]",
               4 => ".",
               5 => ".",
               6 => ".",
               7 => ".",
               8 => ".",
               9 => ".",
               10 => ".",
               11 => "[",
               12 => "]",
               13 => ".",
               14 => "[",
               15 => "]",
               16 => "[",
               17 => "]",
               18 => "#",
               19 => "#"
             },
             2 => %{
               0 => "#",
               1 => "#",
               2 => "[",
               3 => "]",
               4 => ".",
               5 => ".",
               6 => ".",
               7 => ".",
               8 => ".",
               9 => ".",
               10 => ".",
               11 => ".",
               12 => ".",
               13 => ".",
               14 => ".",
               15 => "[",
               16 => "]",
               17 => ".",
               18 => "#",
               19 => "#"
             },
             3 => %{
               0 => "#",
               1 => "#",
               2 => "[",
               3 => "]",
               4 => ".",
               5 => ".",
               6 => ".",
               7 => ".",
               8 => ".",
               9 => ".",
               10 => ".",
               11 => ".",
               12 => "[",
               13 => "]",
               14 => "[",
               15 => "]",
               16 => "[",
               17 => "]",
               18 => "#",
               19 => "#"
             },
             4 => %{
               0 => "#",
               1 => "#",
               2 => "[",
               3 => "]",
               4 => ".",
               5 => ".",
               6 => ".",
               7 => ".",
               8 => ".",
               9 => ".",
               10 => "[",
               11 => "]",
               12 => ".",
               13 => ".",
               14 => ".",
               15 => ".",
               16 => "[",
               17 => "]",
               18 => "#",
               19 => "#"
             },
             5 => %{
               0 => "#",
               1 => "#",
               2 => ".",
               3 => ".",
               4 => "#",
               5 => "#",
               6 => ".",
               7 => ".",
               8 => ".",
               9 => ".",
               10 => ".",
               11 => ".",
               12 => "[",
               13 => "]",
               14 => ".",
               15 => ".",
               16 => ".",
               17 => ".",
               18 => "#",
               19 => "#"
             },
             6 => %{
               0 => "#",
               1 => "#",
               2 => ".",
               3 => ".",
               4 => "[",
               5 => "]",
               6 => ".",
               7 => ".",
               8 => ".",
               9 => ".",
               10 => ".",
               11 => ".",
               12 => ".",
               13 => ".",
               14 => ".",
               15 => ".",
               16 => ".",
               17 => ".",
               18 => "#",
               19 => "#"
             },
             7 => %{
               0 => "#",
               1 => "#",
               2 => ".",
               3 => ".",
               4 => "@",
               5 => ".",
               6 => ".",
               7 => ".",
               8 => ".",
               9 => ".",
               10 => ".",
               11 => "[",
               12 => "]",
               13 => ".",
               14 => "[",
               15 => "]",
               16 => "[",
               17 => "]",
               18 => "#",
               19 => "#"
             },
             8 => %{
               0 => "#",
               1 => "#",
               2 => ".",
               3 => ".",
               4 => ".",
               5 => ".",
               6 => ".",
               7 => ".",
               8 => "[",
               9 => "]",
               10 => "[",
               11 => "]",
               12 => ".",
               13 => ".",
               14 => "[",
               15 => "]",
               16 => ".",
               17 => ".",
               18 => "#",
               19 => "#"
             },
             9 => %{
               0 => "#",
               1 => "#",
               2 => "#",
               3 => "#",
               4 => "#",
               5 => "#",
               6 => "#",
               7 => "#",
               8 => "#",
               9 => "#",
               10 => "#",
               11 => "#",
               12 => "#",
               13 => "#",
               14 => "#",
               15 => "#",
               16 => "#",
               17 => "#",
               18 => "#",
               19 => "#"
             }
           }

    assert get_coordinates(map) == 9021
  end
end
